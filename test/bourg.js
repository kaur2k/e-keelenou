// Generated by CoffeeScript 1.8.0
(function() {
  var Bourgeoisie, Senator, Student, elite, senator, student,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) {
      for (var key in parent) {
        if (__hasProp.call(parent, key)) child[key] = parent[key];
      }

      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    };
    
  Bourgeoisie = (function() {
    function Bourgeoisie(age, privilegeConstant) {
      this.age = age;
      this.privilegeConstant = privilegeConstant;
    }

    Bourgeoisie.prototype.worry = function() {
      return console.log("My stocks are down 1%!");
    };

    Bourgeoisie.prototype.profit = function(hardWork, luck) {
      return (this.age - 23) * hardWork * (luck + this.privilegeConstant);
    };

    return Bourgeoisie;

  })();

  Senator = (function(_super) {
    __extends(Senator, _super);

    function Senator() {
      return Senator.__super__.constructor.apply(this, arguments);
    }

    Senator.prototype.worry = function() {
      return console.log("The polls are down 1%!");
    };

    return Senator;

  })(Bourgeoisie);

  Student = (function(_super) {
    __extends(Student, _super);

    function Student() {
      return Student.__super__.constructor.apply(this, arguments);
    }

    Student.prototype.worry = function() {
      return console.log("Does my privilege inherently make me complicit in the repression of less fortunate classes?");
    };

    Student.prototype.profit = function(hardWork, luck, tuition) {
      return Student.__super__.profit.call(this, hardWork, luck) - tuition;
    };

    return Student;

  })(Bourgeoisie);

  student = new Student(21, 89);

  student.worry();

  student.profit(10, 10, 10000);

  elite = new Bourgeoisie(29, 397);

  elite.worry();

  elite.profit(20, 50);

  senator = new Senator(45, 992);

  senator.worry();

  senator.profit(6, 10);

}).call(this);
